package bbs;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

public class BbsDAO {
	//UserDAO.java와 동일
	private Connection conn; 
	private ResultSet rs; 

	public BbsDAO()
	{
		try
		{
			String dbURL = "jdbc:mysql://localhost:3306/testjsp"; 
			
			String dbID = "root";
			String dbPassword = "1234";
			Class.forName("com.mysql.jdbc.Driver"); 
			
			conn = DriverManager.getConnection(dbURL, dbID, dbPassword);
		}catch(Exception e)
		{
			e.printStackTrace(); 
		}
	}
	
	// 게시판 글쓰기를 위한 함수
	public String getDate()
	{
		String SQL = "SELECT NOW()"; 
		try {
			PreparedStatement pstmt = conn.prepareStatement(SQL);
			rs = pstmt.executeQuery();
			
			if(rs.next()) {
				return rs.getString(1);
			}
				
		} catch(Exception e) {
			e.printStackTrace();
		}
		return ""; 
	}
	
	public int getNext() // 게시글 번호 입력 함수
	{
		String SQL = "SELECT bbsNum FROM BBS ORDER BY bbsNum DESC"; 
		try {
			PreparedStatement pstmt = conn.prepareStatement(SQL);
			rs = pstmt.executeQuery();
			
			if(rs.next()) {
				return rs.getInt(1) + 1;
			} 
			return 1; 
				
		} catch(Exception e) {
			e.printStackTrace();
		}
		return -1; 
	}
	
	public int write(String bbsTitle, String userID, String bbsContent) //실제 글을 작성하는 함수
	{
		String SQL = "INSERT INTO BBS VALUES (?, ?, ?, ?, ?, ?)"; 

		try {
			PreparedStatement pstmt = conn.prepareStatement(SQL);
			pstmt.setInt(1, getNext()); 
			pstmt.setString(2, bbsTitle);
			pstmt.setString(3, userID);
			pstmt.setString(4, getDate());
			pstmt.setString(5, bbsContent);
			pstmt.setInt(6, 1); 
			
			return pstmt.executeUpdate(); 
				
		} catch(Exception e) {
			e.printStackTrace();
		}
		return -1; 
	}
	
	public ArrayList<Bbs> getList(int pageNumber) //import java.util.ArrayList; 
	// ctrl+shift+o를 눌러서 ArrayList를 사용할 수 있도록 해줘야함.
	{
		String SQL = "SELECT * FROM BBS WHERE bbsNum < ?  AND bbsAvailable = 1 ORDER BY bbsID DESC LIMIT 10"; 
		//bbsID가 특정조건보다 작을때, Available=1 (삭제가 되지 않고), 10개까지 제한해서 나타냄
		
		ArrayList<Bbs> list = new ArrayList<Bbs>();
		try {
			PreparedStatement pstmt = conn.prepareStatement(SQL);
			pstmt.setInt(1, getNext() - (pageNumber - 1) * 10);
			/*getNext = 다음에 작성될 글의 번호, 만약 2page, 15번이라면  15 - (2-1)*10 =5, 즉 2page 1, 2, 3, 4 총 4개의 글이 나타남 
			만약 1page, 6번이라면 6 - (1-1)*10 = 6, 즉 1page 1, 2, 3, 4 ,5 총 5개의 글이 나타남 */
			
			rs = pstmt.executeQuery();
			
			while(rs.next()) { //값이 존재할동안,
				Bbs bbs = new Bbs();
				bbs.setBbsNum(rs.getInt(1));
				bbs.setBbsTitle(rs.getString(2));
				bbs.setUserID(rs.getString(3));
				bbs.setBbsDate(rs.getString(4));
				bbs.setBbsContent(rs.getString(5));
				bbs.setBbsAvailable(rs.getInt(6));
			    list.add(bbs); //해당인스턴스에 반환
			} 		
		} catch(Exception e) {
			e.printStackTrace();
		}
		return list; //게시글 출력
	}
	
	public boolean nextPage(int pageNumber) 
	{
		String SQL = "SELECT * FROM BBS WHERE bbsNum < ?  AND bbsAvailable = 1 ORDER BY bbsNUm DESC LIMIT 10";
		
		try {
			PreparedStatement pstmt = conn.prepareStatement(SQL);
			pstmt.setInt(1, getNext() - (pageNumber - 1) * 10);
			
			rs = pstmt.executeQuery();
			
			if(rs.next()) {
				return true;
			} 		
		} catch(Exception e) {
			e.printStackTrace();
		}
		return false;
	}
	
	public Bbs getBbs(int bbsNum) { 
		String SQL = "SELECT * FROM BBS WHERE bbsNum = ?"; 
		try {
			PreparedStatement pstmt = conn.prepareStatement(SQL);
	        pstmt.setInt(1, bbsNum);
	        rs = pstmt.executeQuery();
			
			if(rs.next()) {
	            Bbs bbs = new Bbs();
	            bbs.setBbsNum(rs.getInt(1));
	            bbs.setBbsTitle(rs.getString(2));
	            bbs.setUserID(rs.getString(3));
	            bbs.setBbsDate(rs.getString(4));
	            bbs.setBbsContent(rs.getString(5));
	            bbs.setBbsAvailable(rs.getInt(6));
	            return bbs;
	        }
		} catch(Exception e) {
	        e.printStackTrace();
	    }
		return null; // 해당 게시글이 존재하지 않는 경우
	}
	
	public int update(int bbsNum, String bbsTitle, String bbsContent) {
		String SQL = "UPDATE BBS SET bbsTitle = ?, bbsContent =? WHERE bbsNum = ?";
		try {
			PreparedStatement pstmt = conn.prepareStatement(SQL);
			pstmt.setString(1, bbsTitle);
			pstmt.setString(2, bbsContent);
			pstmt.setInt(3, bbsNum);
			return pstmt.executeUpdate();
		}catch(Exception e){
			e.printStackTrace();
		}
		return -1; //데이터베이스 오류
	}
	
	public int delete(int bbsNum) {
		String SQL = "UPDATE BBS SET bbsAvailable = 0 WHERE bbsNum = ?";
		//글을 삭제해도 글의 정보가 남아있도록 bbsAvailable 값만 0으로 바꿔줌으로써 삭제기능을 줄 수 있다.
		//게시글 번호는 1번부터 2번, 3, 4, ...올라가서 마지막의 번호를 가져와서 +1해준다.
		try {
			PreparedStatement pstmt = conn.prepareStatement(SQL);
			pstmt.setInt(1, bbsNum);
			return pstmt.executeUpdate();
		}catch(Exception e){
			e.printStackTrace();
		}
		return -1; //데이터베이스 오류
	}
}
